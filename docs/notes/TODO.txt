Done:
- Generate Dataset: Real spectra vs synthitic spectra
- Create Dataloader for spectra
- Create original CycleGAN for this data type
- Add TTUR
- Fix output of Discriminator (Reshape + Linear Layer)
- Add Wasserstein Loss + Spectral Normalization
    - Use a linear activation function in the output layer of the critic model (instead of sigmoid).
    - Use Wasserstein loss to train the critic and generator models that promote larger difference between scores for real and generated images.
    - Constrain critic model weights to a limited range after each mini batch update (e.g. [-0.01,0.01]).
    OR
    - Gradient Penalty
    - Update the critic model more times than the generator each iteration (e.g. 5).
- Setup Random Forest code
- Improve Loss visualization
- Spectral Normalization
- Convert matlab code to python (pydicom)
- Improve dicom2matlab code
- Fix loss

- Create Paired Dataset for validation only!
- Entropy Loss
- Create baselines with paired dataset
- Fix loss plots 
- Create Dataset without noise

TODO:
- Train with lr=0.0001
- Try TTUR with 0.0003 & 0.00002

- Add Perceptual Feature Loss
- Update README